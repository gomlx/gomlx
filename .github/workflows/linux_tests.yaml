name: "Linux"
permissions:
  # read|write|none
  actions: read
  checks: read
  contents: write
  deployments: read
  # id-token: read    --> doesn't work
  issues: read
  discussions: read
  packages: read
  pages: read
  pull-requests: write
  repository-projects: read
  security-events: read
  statuses: read

# Triggers the workflow on push or pull request events but only for the "main" branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  linux-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25.x"

      - name: Install gopjrt shared libraries
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          go install github.com/gomlx/gopjrt/cmd/gopjrt_installer@latest
          sudo env GH_TOKEN=$GH_TOKEN $(go env GOPATH)/bin/gopjrt_installer -plugin linux -version latest -path /usr/local

      - name: PreTest
        run: |
          export LD_LIBRARY_PATH=/usr/local/lib
          go test ./pkg/core/graph

      - name: Test
        # Tests only run with --short, since the full tests involve downloading datasets and would be too costly for a GitHub action.
        # The non-short tests work well locally (in the development box) because the datasets are cached.
        # Also excludes tests that have large dependencies (e.g.: X11):
        run: |
          export LD_LIBRARY_PATH=/usr/local/lib
          go test -short $(go list ./... | grep -v "backends/xla" | grep -v "ui/fyneui" | grep -v "examples/ogbnmag")

      - name: Go Coverage Badge
        if: github.ref == 'refs/heads/main'
        uses: tj-actions/coverage-badge-go@v2
        with:
          green: 80
          filename: docs/coverage.out

      - name: Commit README.md changes
        if: github.ref == 'refs/heads/main'
        run: |
          if git diff --quiet -- 'README.md' ; then
            echo "README.md not modified."
          else
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add README.md
            git commit -m "chore: Updated coverage badge."
          fi

      - name: Push Changes
        if: github.ref == 'refs/heads/main'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}
          branch: ${{ github.ref }}
