// Code generated by "enumer -type FFTType -trimprefix=FFT -output=gen_ffttype_enumer.go builder.go"; DO NOT EDIT.

package backends

import (
	"fmt"
	"strings"
)

const _FFTTypeName = "ForwardInverseForwardRealInverseReal"

var _FFTTypeIndex = [...]uint8{0, 7, 14, 25, 36}

const _FFTTypeLowerName = "forwardinverseforwardrealinversereal"

func (i FFTType) String() string {
	if i < 0 || i >= FFTType(len(_FFTTypeIndex)-1) {
		return fmt.Sprintf("FFTType(%d)", i)
	}
	return _FFTTypeName[_FFTTypeIndex[i]:_FFTTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _FFTTypeNoOp() {
	var x [1]struct{}
	_ = x[FFTForward-(0)]
	_ = x[FFTInverse-(1)]
	_ = x[FFTForwardReal-(2)]
	_ = x[FFTInverseReal-(3)]
}

var _FFTTypeValues = []FFTType{FFTForward, FFTInverse, FFTForwardReal, FFTInverseReal}

var _FFTTypeNameToValueMap = map[string]FFTType{
	_FFTTypeName[0:7]:        FFTForward,
	_FFTTypeLowerName[0:7]:   FFTForward,
	_FFTTypeName[7:14]:       FFTInverse,
	_FFTTypeLowerName[7:14]:  FFTInverse,
	_FFTTypeName[14:25]:      FFTForwardReal,
	_FFTTypeLowerName[14:25]: FFTForwardReal,
	_FFTTypeName[25:36]:      FFTInverseReal,
	_FFTTypeLowerName[25:36]: FFTInverseReal,
}

var _FFTTypeNames = []string{
	_FFTTypeName[0:7],
	_FFTTypeName[7:14],
	_FFTTypeName[14:25],
	_FFTTypeName[25:36],
}

// FFTTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func FFTTypeString(s string) (FFTType, error) {
	if val, ok := _FFTTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _FFTTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to FFTType values", s)
}

// FFTTypeValues returns all values of the enum
func FFTTypeValues() []FFTType {
	return _FFTTypeValues
}

// FFTTypeStrings returns a slice of all String values of the enum
func FFTTypeStrings() []string {
	strs := make([]string, len(_FFTTypeNames))
	copy(strs, _FFTTypeNames)
	return strs
}

// IsAFFTType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i FFTType) IsAFFTType() bool {
	for _, v := range _FFTTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
