// Code generated by "enumer -type=ChannelsAxisConfig images.go"; DO NOT EDIT.

package images

import (
	"fmt"
	"strings"
)

const _ChannelsAxisConfigName = "ChannelsFirstChannelsLast"

var _ChannelsAxisConfigIndex = [...]uint8{0, 13, 25}

const _ChannelsAxisConfigLowerName = "channelsfirstchannelslast"

func (i ChannelsAxisConfig) String() string {
	if i >= ChannelsAxisConfig(len(_ChannelsAxisConfigIndex)-1) {
		return fmt.Sprintf("ChannelsAxisConfig(%d)", i)
	}
	return _ChannelsAxisConfigName[_ChannelsAxisConfigIndex[i]:_ChannelsAxisConfigIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ChannelsAxisConfigNoOp() {
	var x [1]struct{}
	_ = x[ChannelsFirst-(0)]
	_ = x[ChannelsLast-(1)]
}

var _ChannelsAxisConfigValues = []ChannelsAxisConfig{ChannelsFirst, ChannelsLast}

var _ChannelsAxisConfigNameToValueMap = map[string]ChannelsAxisConfig{
	_ChannelsAxisConfigName[0:13]:       ChannelsFirst,
	_ChannelsAxisConfigLowerName[0:13]:  ChannelsFirst,
	_ChannelsAxisConfigName[13:25]:      ChannelsLast,
	_ChannelsAxisConfigLowerName[13:25]: ChannelsLast,
}

var _ChannelsAxisConfigNames = []string{
	_ChannelsAxisConfigName[0:13],
	_ChannelsAxisConfigName[13:25],
}

// ChannelsAxisConfigString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ChannelsAxisConfigString(s string) (ChannelsAxisConfig, error) {
	if val, ok := _ChannelsAxisConfigNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ChannelsAxisConfigNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ChannelsAxisConfig values", s)
}

// ChannelsAxisConfigValues returns all values of the enum
func ChannelsAxisConfigValues() []ChannelsAxisConfig {
	return _ChannelsAxisConfigValues
}

// ChannelsAxisConfigStrings returns a slice of all String values of the enum
func ChannelsAxisConfigStrings() []string {
	strs := make([]string, len(_ChannelsAxisConfigNames))
	copy(strs, _ChannelsAxisConfigNames)
	return strs
}

// IsAChannelsAxisConfig returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ChannelsAxisConfig) IsAChannelsAxisConfig() bool {
	for _, v := range _ChannelsAxisConfigValues {
		if i == v {
			return true
		}
	}
	return false
}
