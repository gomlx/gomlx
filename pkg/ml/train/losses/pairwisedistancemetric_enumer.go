// Code generated by "enumer -type=PairwiseDistanceMetric -trimprefix=PairwiseDistanceMetric -transform=snake -values -text -json -yaml triplet.go"; DO NOT EDIT.

package losses

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _PairwiseDistanceMetricName = "l2squared_l2cosine"

var _PairwiseDistanceMetricIndex = [...]uint8{0, 2, 12, 18}

const _PairwiseDistanceMetricLowerName = "l2squared_l2cosine"

func (i PairwiseDistanceMetric) String() string {
	if i < 0 || i >= PairwiseDistanceMetric(len(_PairwiseDistanceMetricIndex)-1) {
		return fmt.Sprintf("PairwiseDistanceMetric(%d)", i)
	}
	return _PairwiseDistanceMetricName[_PairwiseDistanceMetricIndex[i]:_PairwiseDistanceMetricIndex[i+1]]
}

func (PairwiseDistanceMetric) Values() []string {
	return PairwiseDistanceMetricStrings()
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _PairwiseDistanceMetricNoOp() {
	var x [1]struct{}
	_ = x[PairwiseDistanceMetricL2-(0)]
	_ = x[PairwiseDistanceMetricSquaredL2-(1)]
	_ = x[PairwiseDistanceMetricCosine-(2)]
}

var _PairwiseDistanceMetricValues = []PairwiseDistanceMetric{PairwiseDistanceMetricL2, PairwiseDistanceMetricSquaredL2, PairwiseDistanceMetricCosine}

var _PairwiseDistanceMetricNameToValueMap = map[string]PairwiseDistanceMetric{
	_PairwiseDistanceMetricName[0:2]:        PairwiseDistanceMetricL2,
	_PairwiseDistanceMetricLowerName[0:2]:   PairwiseDistanceMetricL2,
	_PairwiseDistanceMetricName[2:12]:       PairwiseDistanceMetricSquaredL2,
	_PairwiseDistanceMetricLowerName[2:12]:  PairwiseDistanceMetricSquaredL2,
	_PairwiseDistanceMetricName[12:18]:      PairwiseDistanceMetricCosine,
	_PairwiseDistanceMetricLowerName[12:18]: PairwiseDistanceMetricCosine,
}

var _PairwiseDistanceMetricNames = []string{
	_PairwiseDistanceMetricName[0:2],
	_PairwiseDistanceMetricName[2:12],
	_PairwiseDistanceMetricName[12:18],
}

// PairwiseDistanceMetricString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func PairwiseDistanceMetricString(s string) (PairwiseDistanceMetric, error) {
	if val, ok := _PairwiseDistanceMetricNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _PairwiseDistanceMetricNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to PairwiseDistanceMetric values", s)
}

// PairwiseDistanceMetricValues returns all values of the enum
func PairwiseDistanceMetricValues() []PairwiseDistanceMetric {
	return _PairwiseDistanceMetricValues
}

// PairwiseDistanceMetricStrings returns a slice of all String values of the enum
func PairwiseDistanceMetricStrings() []string {
	strs := make([]string, len(_PairwiseDistanceMetricNames))
	copy(strs, _PairwiseDistanceMetricNames)
	return strs
}

// IsAPairwiseDistanceMetric returns "true" if the value is listed in the enum definition. "false" otherwise
func (i PairwiseDistanceMetric) IsAPairwiseDistanceMetric() bool {
	for _, v := range _PairwiseDistanceMetricValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for PairwiseDistanceMetric
func (i PairwiseDistanceMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for PairwiseDistanceMetric
func (i *PairwiseDistanceMetric) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("PairwiseDistanceMetric should be a string, got %s", data)
	}

	var err error
	*i, err = PairwiseDistanceMetricString(s)
	return err
}

// MarshalText implements the encoding.TextMarshaler interface for PairwiseDistanceMetric
func (i PairwiseDistanceMetric) MarshalText() ([]byte, error) {
	return []byte(i.String()), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface for PairwiseDistanceMetric
func (i *PairwiseDistanceMetric) UnmarshalText(text []byte) error {
	var err error
	*i, err = PairwiseDistanceMetricString(string(text))
	return err
}

// MarshalYAML implements a YAML Marshaler for PairwiseDistanceMetric
func (i PairwiseDistanceMetric) MarshalYAML() (interface{}, error) {
	return i.String(), nil
}

// UnmarshalYAML implements a YAML Unmarshaler for PairwiseDistanceMetric
func (i *PairwiseDistanceMetric) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var s string
	if err := unmarshal(&s); err != nil {
		return err
	}

	var err error
	*i, err = PairwiseDistanceMetricString(s)
	return err
}
